#include "<DEVELOPER_DIR>/Makefiles/CoreOS/Xcode/BSD.xcconfig"

// Versioning

// RC_ProjectSourceVersion unless it's unset, falling back to RECON_BUILD_VERSION_NONE
Libcollections_BUILD_VERSION = $(<project>_BUILD_VERSION_$(<project>_BUILD_VERSION_SUFFIX_$(RC_ProjectSourceVersion)))

Libcollections_BUILD_VERSION_ = $(RC_ProjectSourceVersion)
Libcollections_BUILD_VERSION_SUFFIX_ = NONE

// A high default value for when CURRENT_PROJECT_VERSION is unset (running `~rc/bin/buildit` with no version specified)
collections_BUILD_VERSION_NONE = 60000

CURRENT_PROJECT_VERSION = $(collections_BUILD_VERSION)
DYLIB_CURRENT_VERSION = $(collections_BUILD_VERSION)
MODULE_VERSION = $(collections_BUILD_VERSION)

ARCHS = $(ARCHS_STANDARD)
ONLY_ACTIVE_ARCH = NO
ONLY_ACTIVE_ARCH[config=Debug] = YES
ENABLE_TESTABILITY[config=Debug] = YES
ALWAYS_SEARCH_USER_PATHS = NO
USE_HEADERMAP = NO
INFOPLIST_PREPROCESS = YES
STRIP_INSTALLED_PRODUCT[config=Debug][sdk=*] = NO
SKIP_INSTALL = NO
OTHER_CFLAGS = -fverbose-asm
SUPPORTS_TEXT_BASED_API = YES
TAPI_VERIFY_MODE=Pedantic
CODE_SIGN_IDENTITY = -

// Compiler options

GCC_PREPROCESSOR_DEFINITIONS_NOT_USED_IN_PRECOMPS[config=Debug] = DEBUG=1

GCC_C_LANGUAGE_STANDARD = gnu11
CLANG_CXX_LANGUAGE_STANDARD = gnu++11
GCC_OPTIMIZATION_LEVEL = s
GCC_OPTIMIZATION_LEVEL[config=Debug] = 0
CLANG_ENABLE_OBJC_ARC = YES
CLANG_LINK_OBJC_RUNTIME = NO
ENABLE_STRICT_OBJC_MSGSEND = YES
GCC_ENABLE_BUILTIN_FUNCTIONS = YES
GCC_ENABLE_CPP_EXCEPTIONS = NO
GCC_ENABLE_PASCAL_STRINGS = NO
GCC_NO_COMMON_BLOCKS = YES
GCC_STRICT_ALIASING = YES
GCC_SYMBOLS_PRIVATE_EXTERN = YES
GCC_TREAT_WARNINGS_AS_ERRORS = YES

HEADER_SEARCH_PATHS = $(SDKROOT)/System/Library/Frameworks/System.framework/PrivateHeaders $(PROJECT_DIR)

// Static analyzer

CLANG_ANALYZER_DEADCODE_DEADSTORES = YES
CLANG_ANALYZER_GCD = YES
CLANG_ANALYZER_MEMORY_MANAGEMENT = YES
CLANG_ANALYZER_NONNULL = YES
CLANG_ANALYZER_SECURITY_FLOATLOOPCOUNTER = YES
CLANG_ANALYZER_SECURITY_INSECUREAPI_GETPW_GETS = YES
CLANG_ANALYZER_SECURITY_INSECUREAPI_MKSTEMP = YES
CLANG_ANALYZER_SECURITY_INSECUREAPI_RAND = YES
CLANG_ANALYZER_SECURITY_INSECUREAPI_STRCPY = YES
CLANG_ANALYZER_SECURITY_INSECUREAPI_UNCHECKEDRETURN = YES
CLANG_ANALYZER_SECURITY_INSECUREAPI_VFORK = YES
CLANG_ANALYZER_SECURITY_KEYCHAIN_API = YES


PRODUCT_NAME = collections
INSTALL_PATH = /usr/lib/system
PRIVATE_HEADERS_FOLDER_PATH = /usr/local/include/os
PUBLIC_HEADERS_FOLDER_PATH = /usr/local/include/os
DYLIB_CURRENT_VERSION = $(CURRENT_PROJECT_VERSION)
EXECUTABLE_PREFIX = libsystem_
BUILD_VARIANTS = normal
CURRENT_PROJECT_VERSION = $(RC_ProjectSourceVersion)
VERSION_INFO_PREFIX = __
VERSIONING_SYSTEM = apple-generic
GCC_SYMBOLS_PRIVATE_EXTERN = YES
STRIP_STYLE = non-global

SUPPORTED_PLATFORMS = macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator iphoneosnano iphonesimulatornano bridgeos

LINK_WITH_STANDARD_LIBRARIES = NO
OTHER_LDFLAGS = -umbrella System -L/usr/lib/system $(LDFLAGS_DYLD) $(LDFLAGS_COMPILER_RT) $(LDFLAGS_SYSCALL) $(LDFLAGS_MALLOC) $(LDFLAGS_C) $(LDFLAGS_BLOCKS) $(LDFLAGS_DARWIN)
LDFLAGS_DYLD = -ldyld
LDFLAGS_COMPILER_RT = -lcompiler_rt
LDFLAGS_SYSCALL = -lsystem_kernel
LDFLAGS_SYSCALL[sdk=iphonesimulator*] = -lsystem_sim_kernel
LDFLAGS_MALLOC = -lsystem_malloc
LDFLAGS_C = -lsystem_c
LDFLAGS_BLOCKS = -lsystem_blocks
LDFLAGS_DARWIN = -lsystem_darwin
